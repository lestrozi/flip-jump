// Every line is (running) bananas!
// This file contains a width-independent code

// This file contains constants and labels used by other standard library files.

// Everything after // is ignored, everything before first : is ignored too, and every whitespace is ignored (besides new line)
// An opcode is:  F;L  F  ;L  or just  ;  (no F => F=0;  no L => L=next)


// w = ??       // memory and operands width. Is defined at compile time.
dww  = #w       // double-w-width (log2(2w))
ww   = dww-1    // w-width (log2(w))
dw   = 2 * w    // double word size
dbit = w + dww  // bit-distance from variable start to bit value (w+dww)



// ---------- Startup Code


.def startup
    ;code_start     // 0w;1w : code start
  IO:
    ;0              // 2w;3w : now points to io_handler

  code_start:
                    // 4w;5w : start of code
.end


.def startup in0_handler in1_handler
    .startup
    .default_input in0_handler in1_handler
.end



// ---------- Basic Functionality


.def word_pad x : pad_start
  pad_start:
    [(0-pad_start/w) % x] 0
.end

.def pad x
    .word_pad x*2
.end
